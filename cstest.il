Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
	--memmatch:
		spec           [1, 1]
		jump           [L158, [0], [], []]
	--guard:L158:
		spec           [1, 7]
		newhlink     [1]
		getfunc      [2, 1]
		allocatomindirect[3, 2]
		newhlink     [4]
		getfunc      [5, 4]
		allocatomindirect[6, 5]
		jump           [L159, [0], [3, 3, 6, 6], []]
	--body:L159:
		spec           [5, 49]
		commit         ["_init", 0]
		newmem       [5, 0, 0]
		loadruleset    [5, @601]
		copyatom     [6, 5, 2]
		copyatom     [7, 5, 2]
		copyatom     [8, 5, 4]
		copyatom     [9, 5, 4]
		copyatom     [10, 5, 4]
		newatom      [11, 5, 'dlistp'_1]
		newatom      [12, 5, '.'_3]
		newatom      [13, 5, 1_1]
		newatom      [14, 5, 'r'_3]
		newatom      [15, 5, 3_1]
		newatom      [16, 5, '.'_3]
		newatom      [17, 5, 2_1]
		newatom      [18, 5, '[]'_1]
		newatom      [19, 5, 'in'_3]
		newatom      [20, 5, 'remove'_7]
		newatom      [21, 5, 'r'_3]
		newatom      [22, 5, 1_1]
		newatom      [23, 5, 'r'_3]
		newatom      [24, 5, 2_1]
		newatom      [25, 5, 'r'_3]
		newatom      [26, 5, 1_1]
		newatom      [27, 5, '.'_3]
		newatom      [28, 5, 1_1]
		newatom      [29, 5, '.'_3]
		newatom      [30, 5, 2_1]
		newatom      [31, 5, '.'_3]
		newatom      [32, 5, 1_1]
		newatom      [33, 5, '[]'_1]
		newatom      [34, 5, '[]'_1]
		newatom      [35, 5, 'wait'_1]
		newatom      [36, 5, 'noattack'_4]
		newatom      [37, 5, 0_1]
		newatom      [38, 5, 'in'_3]
		newatom      [39, 5, '.'_3]
		newatom      [40, 5, 0_1]
		newatom      [41, 5, '[]'_1]
		newatom      [42, 5, 'in'_3]
		newatom      [43, 5, '.'_3]
		newatom      [44, 5, 0_1]
		newatom      [45, 5, '.'_3]
		newatom      [46, 5, 0_1]
		newatom      [47, 5, '[]'_1]
		newatom      [48, 5, 'a'_1]
		newlink        [11, 0, 12, 2, 5]
		newlink        [12, 0, 13, 0, 5]
		newlink        [12, 1, 14, 2, 5]
		newlink        [14, 0, 15, 0, 5]
		newlink        [14, 1, 16, 2, 5]
		newlink        [16, 0, 17, 0, 5]
		newlink        [16, 1, 18, 0, 5]
		newlink        [19, 0, 20, 6, 5]
		newlink        [19, 1, 48, 0, 5]
		newlink        [19, 2, 8, 0, 5]
		newlink        [20, 0, 21, 2, 5]
		newlink        [20, 1, 34, 0, 5]
		newlink        [20, 2, 35, 0, 5]
		newlink        [20, 3, 36, 3, 5]
		newlink        [20, 4, 38, 2, 5]
		newlink        [20, 5, 42, 2, 5]
		newlink        [21, 0, 22, 0, 5]
		newlink        [21, 1, 23, 2, 5]
		newlink        [23, 0, 24, 0, 5]
		newlink        [23, 1, 25, 2, 5]
		newlink        [25, 0, 26, 0, 5]
		newlink        [25, 1, 27, 2, 5]
		newlink        [27, 0, 28, 0, 5]
		newlink        [27, 1, 29, 2, 5]
		newlink        [29, 0, 30, 0, 5]
		newlink        [29, 1, 31, 2, 5]
		newlink        [31, 0, 32, 0, 5]
		newlink        [31, 1, 33, 0, 5]
		newlink        [36, 0, 6, 0, 5]
		newlink        [36, 1, 9, 0, 5]
		newlink        [36, 2, 37, 0, 5]
		newlink        [38, 0, 39, 2, 5]
		newlink        [38, 1, 7, 0, 5]
		newlink        [39, 0, 40, 0, 5]
		newlink        [39, 1, 41, 0, 5]
		newlink        [42, 0, 43, 2, 5]
		newlink        [42, 1, 10, 0, 5]
		newlink        [43, 0, 44, 0, 5]
		newlink        [43, 1, 45, 2, 5]
		newlink        [45, 0, 46, 0, 5]
		newlink        [45, 1, 47, 0, 5]
		freeatom       [2]
		freeatom       [4]
		proceed        []


Compiled Ruleset @601            
Compiled Rule 
	--atommatch:
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'dlistp'_1]
		findatom     [2, 0, '[]'_1]
		jump           [L101, [0], [1, 2], []]
	--guard:L101:
		spec           [3, 6]
		getlink      [3, 1, 0]
		getlink      [4, 2, 0]
		subrule      [5, 0, "dlist", [0, 4, 3]]
		jump           [L102, [0], [1, 2], []]
	--body:L102:
		spec           [3, 7]
		commit         ["_dlis", 0]
		newlist      [3]
		getlink      [4, 2, 0]
		addtolist      [3, 4]
		getlink      [5, 1, 0]
		addtolist      [3, 5]
		removeatom     [1, 0]
		removeatom     [2, 0]
		removeground   [3, 0]
		newatom      [6, 0, 'yeees'_0]
		freeatom       [1]
		freeatom       [2]
		freeground     [3]
		proceed        []

Compiled Rule 
	--atommatch:
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'r'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		jump           [L106, [0], [1, 2], []]
	--guard:L106:
		spec           [3, 5]
		derefatom    [3, 1, 0]
		derefatom    [4, 2, 0]
		isint          [3]
		isint          [4]
		ine            [3, 4]
		jump           [L107, [0], [1, 2, 3, 4], []]
	--body:L107:
		spec           [5, 9]
		commit         ["remove2", 0]
		removeatom     [1, 0]
		removeatom     [2, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		copyatom     [5, 0, 3]
		copyatom     [6, 0, 4]
		newatom      [7, 0, '.'_3]
		newatom      [8, 0, 'r'_3]
		newlink        [7, 0, 6, 0, 0]
		newlink        [7, 1, 8, 2, 0]
		relink         [7, 2, 1, 2, 0]
		newlink        [8, 0, 5, 0, 0]
		relink         [8, 1, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'r'_3]
		deref        [2, 1, 1, 2]
		func           [2, '.'_3]
		jump           [L111, [0], [1, 2], []]
	--guard:L111:
		spec           [3, 5]
		derefatom    [3, 1, 0]
		derefatom    [4, 2, 0]
		isint          [3]
		isint          [4]
		ieq            [3, 4]
		jump           [L112, [0], [1, 2, 3, 4], []]
	--body:L112:
		spec           [5, 7]
		commit         ["remove3", 0]
		removeatom     [1, 0]
		removeatom     [2, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		newatom      [5, 0, 'r'_3]
		newatom      [6, 0, 'true'_1]
		newlink        [5, 0, 6, 0, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
	--memmatch:
		spec           [1, 3]
		findatom     [1, 0, 'r'_3]
		deref        [2, 1, 1, 0]
		func           [2, '[]'_1]
		jump           [L116, [0], [1, 2], []]
	--guard:L116:
		spec           [3, 4]
		derefatom    [3, 1, 0]
		isint          [3]
		jump           [L117, [0], [1, 2, 3], []]
	--body:L117:
		spec           [4, 5]
		commit         ["remove4", 0]
		removeatom     [1, 0]
		removeatom     [2, 0]
		removeatom     [3, 0]
		newatom      [4, 0, '[]'_1]
		relink         [4, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
	--memmatch:
		spec           [1, 5]
		findatom     [1, 0, 'remove'_7]
		findatom     [2, 0, 'r'_3]
		deref        [3, 2, 0, 0]
		func           [3, 'true'_1]
		findatom     [4, 0, '[]'_1]
		jump           [L121, [0], [1, 2, 3, 4], []]
	--guard:L121:
		spec           [5, 12]
		getlink      [5, 1, 0]
		getlink      [6, 2, 1]
		getlink      [7, 2, 2]
		getlink      [8, 4, 0]
		subrule      [9, 0, "dlistr", [0, 7, 5]]
		subrule      [10, 0, "dlistr", [0, 8, 6]]
		derefatom    [11, 1, 2]
		isunary        [11]
		jump           [L122, [0], [1, 2, 3, 4, 11], []]
	--body:L122:
		spec           [6, 47]
		commit         ["remove_true", 0]
		newlist      [6]
		getlink      [7, 4, 0]
		addtolist      [6, 7]
		getlink      [8, 2, 1]
		addtolist      [6, 8]
		newlist      [9]
		getlink      [10, 2, 2]
		addtolist      [9, 10]
		getlink      [11, 1, 0]
		addtolist      [9, 11]
		removeatom     [1, 0]
		removeatom     [2, 0]
		removeatom     [3, 0]
		removeatom     [4, 0]
		removeground   [9, 0]
		removeground   [6, 0]
		removeatom     [5, 0]
		insertconnectorsinnull[12, [10, 11]]
		newlist      [13]
		getlink      [14, 2, 2]
		addtolist      [13, 14]
		getlink      [15, 1, 0]
		addtolist      [13, 15]
		insertconnectorsinnull[16, [7, 8]]
		newlist      [17]
		getlink      [18, 4, 0]
		addtolist      [17, 18]
		getlink      [19, 2, 1]
		addtolist      [17, 19]
		copyground   [20, 13, 0, []]
		getfromlist  [21, 20, 0]
		getfromlist  [22, 20, 1]
		copyground   [23, 17, 0, []]
		getfromlist  [24, 23, 0]
		getfromlist  [25, 23, 1]
		newatom      [26, 0, 'remove'_7]
		newatom      [27, 0, 'true'_1]
		newatom      [28, 0, '[]'_1]
		alloclink    [29, 28, 0]
		alloclink    [30, 26, 6]
		alloclink    [31, 26, 5]
		alloclink    [32, 26, 4]
		alloclink    [33, 26, 3]
		alloclink    [34, 27, 0]
		alloclink    [35, 26, 2]
		alloclink    [36, 26, 1]
		alloclink    [37, 26, 0]
		getfromlist  [38, 21, 0]
		getfromlist  [39, 21, 1]
		getfromlist  [40, 24, 0]
		getfromlist  [41, 24, 1]
		unifylinks     [37, 39, 0]
		getlink      [42, 1, 1]
		unifylinks     [36, 42, 0]
		unifylinks     [35, 34, 0]
		getlink      [43, 1, 3]
		unifylinks     [33, 43, 0]
		getlink      [44, 1, 4]
		unifylinks     [32, 44, 0]
		getlink      [45, 1, 5]
		unifylinks     [31, 45, 0]
		getlink      [46, 1, 6]
		unifylinks     [30, 46, 0]
		unifylinks     [29, 40, 0]
		unifylinks     [38, 41, 0]
		deleteconnectors[12, 22]
		deleteconnectors[16, 25]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		freeground     [13]
		freeground     [17]
		freeatom       [5]
		proceed        []

Compiled Subrule @dlistr
		spec           [3, 4]
		branch         [[
                  subrule      [3, 0, "dlistr_0", [0, 1, 2]]
                  succreturn     [3] ]]
		branch         [[
                  subrule      [3, 0, "dlistr_1", [0, 1, 2]]
                  succreturn     [3] ]]
		branch         [[
                  subrule      [3, 0, "dlistr_2", [0, 1, 2]]
                  succreturn     [3] ]]
		failreturn     []

Compiled Subrule @dlistr_0
		spec           [3, 4]
		ispairedlink   [1, 2]
		allocset     [3]
		succreturn     [3]

Compiled Subrule @dlistr_1
		spec           [3, 8]
		dereflink    [3, 2, 2]
		func           [3, '.'_3]
		getlink      [4, 3, 1]
		subrule      [5, 0, "dlistr", [0, 1, 4]]
		derefatom    [6, 3, 0]
		isunary        [6]
		allocset     [7]
		succreturn     [7]

Compiled Subrule @dlistr_2
		spec           [3, 8]
		dereflink    [3, 2, 2]
		func           [3, 'r'_3]
		getlink      [4, 3, 1]
		subrule      [5, 0, "dlistr", [0, 1, 4]]
		derefatom    [6, 3, 0]
		isunary        [6]
		allocset     [7]
		succreturn     [7]

Compiled Subrule @dlist
		spec           [3, 4]
		branch         [[
                  subrule      [3, 0, "dlist_0", [0, 1, 2]]
                  succreturn     [3] ]]
		branch         [[
                  subrule      [3, 0, "dlist_1", [0, 1, 2]]
                  succreturn     [3] ]]
		failreturn     []

Compiled Subrule @dlist_0
		spec           [3, 4]
		ispairedlink   [1, 2]
		allocset     [3]
		succreturn     [3]

Compiled Subrule @dlist_1
		spec           [3, 8]
		dereflink    [3, 2, 2]
		func           [3, '.'_3]
		getlink      [4, 3, 1]
		subrule      [5, 0, "dlist", [0, 1, 4]]
		derefatom    [6, 3, 0]
		isunary        [6]
		allocset     [7]
		succreturn     [7]


